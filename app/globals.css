@tailwind base;
@tailwind components;
@tailwind utilities;

/* Hub Academy Brand Variables */
:root {
  --primary: #A3FF3C;
  --primary-dark: #8FE61A;
  --secondary: #16153A;
  --secondary-light: #1E1D42;
  --charcoal: #212121;
  --charcoal-light: #2A2A2A;
  --white: #FFFFFF;
  --white-dim: #F5F5F5;
  
  --safe-area-inset-top: env(safe-area-inset-top);
  --safe-area-inset-bottom: env(safe-area-inset-bottom);
  --safe-area-inset-left: env(safe-area-inset-left);
  --safe-area-inset-right: env(safe-area-inset-right);
}

/* ✅ CRITICAL: Modern viewport units for proper mobile handling */
html {
  height: 100%;
  /* ✅ KEY: Use dvh (dynamic viewport height) instead of vh */
  min-height: 100dvh;
  /* ✅ KEY: Add safe area padding to document */
  padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
  background: var(--secondary);
  /* Prevent overscroll bounce on iOS */
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
}

/* Base Styles */
body {
  height: 100%;
  /* ✅ KEY: Use dvh for proper mobile viewport handling */
  min-height: 100dvh;
  margin: 0;
  padding: 0;
  background: var(--secondary);
  color: var(--white);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Prevent overscroll bounce on iOS */
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
}

/* ✅ CRITICAL: iOS PWA Specific Fixes */
@supports (padding-top: env(safe-area-inset-top)) {
  html {
    --safe-area-inset-top: env(safe-area-inset-top);
    --safe-area-inset-bottom: env(safe-area-inset-bottom);
    --safe-area-inset-left: env(safe-area-inset-left);
    --safe-area-inset-right: env(safe-area-inset-right);
  }
}

/* ✅ CRITICAL: Standalone mode detection and fixes */
@media (display-mode: standalone) {
  /* Force all headers to stay fixed on iPhone PWA */
  header,
  .ios-pwa-fixed-header,
  [data-header="true"] {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 9999 !important;
    transform: translateZ(0) !important;
    will-change: transform !important;
    backface-visibility: hidden !important;
    padding-top: env(safe-area-inset-top) !important;
    padding-left: env(safe-area-inset-left) !important;
    padding-right: env(safe-area-inset-right) !important;
    /* FORCE: Prevent any movement */
    margin: 0 !important;
    transform-origin: top left !important;
    /* FORCE: Hardware acceleration */
    -webkit-transform: translateZ(0) !important;
    -webkit-backface-visibility: hidden !important;
    -webkit-perspective: 1000 !important;
  }
  
  /* LESS AGGRESSIVE: Only set height constraints, not position fixed */
  html {
    height: var(--app-height, 100dvh) !important;
    min-height: var(--app-height, 100dvh) !important;
    max-height: var(--app-height, 100dvh) !important;
  }
  
  body {
    height: var(--app-height, 100dvh) !important;
    min-height: var(--app-height, 100dvh) !important;
    max-height: var(--app-height, 100dvh) !important;
  }
}

/* ✅ NEW: Aggressive iOS PWA fixes with keyboard state detection */
body.keyboard-open {
  /* Quando teclado está aberto, mantém altura original */
  height: var(--app-height, 100dvh) !important;
  min-height: var(--app-height, 100dvh) !important;
  max-height: var(--app-height, 100dvh) !important;
  overflow: hidden !important;
}

body.keyboard-closed {
  /* Quando teclado está fechado, usa altura normal */
  height: var(--app-height, 100dvh) !important;
  min-height: var(--app-height, 100dvh) !important;
  max-height: var(--app-height, 100dvh) !important;
  overflow: hidden !important;
}

/* ✅ KEYBOARD STATE: Maintain fixed header even when keyboard is open */
body.keyboard-open header,
body.keyboard-open .ios-pwa-fixed-header,
body.keyboard-open [data-header="true"] {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 9999 !important;
  transform: translateZ(0) !important;
  will-change: transform !important;
  backface-visibility: hidden !important;
  /* FORCE: Stay in place */
  margin-top: 0 !important;
  transform: translate3d(0, 0, 0) !important;
}

/* ✅ CRITICAL: iOS PWA Fixed Header Solution with keyboard detection */
.ios-pwa-fixed-header {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 9999 !important;
  transform: translateZ(0) !important;
  will-change: transform !important;
  backface-visibility: hidden !important;
  /* ✅ KEY: Add safe area padding for notch */
  padding-top: env(safe-area-inset-top) !important;
  padding-left: env(safe-area-inset-left) !important;
  padding-right: env(safe-area-inset-right) !important;
}

/* ✅ CRITICAL: iOS PWA Fixed Footer Solution with smart keyboard handling */
.ios-pwa-fixed-footer {
  position: fixed !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 50 !important;
  /* ✅ KEY: Add safe area padding for home indicator */
  padding-left: env(safe-area-inset-left) !important;
  padding-right: env(safe-area-inset-right) !important;
}

/* ✅ NEW: Smart safe area bottom handling - only when keyboard is NOT visible */
:root:not(:has(input:focus-visible, textarea:focus-visible, [contenteditable]:focus-visible)) .ios-pwa-fixed-footer {
  padding-bottom: env(safe-area-inset-bottom) !important;
}

/* ✅ CRITICAL: Content area for iOS PWA with dynamic height */
.ios-pwa-content {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  /* ✅ KEY: Account for header and footer heights + safe areas */
  padding-top: calc(80px + env(safe-area-inset-top)) !important;
  padding-bottom: calc(120px + env(safe-area-inset-bottom)) !important;
  padding-left: env(safe-area-inset-left) !important;
  padding-right: env(safe-area-inset-right) !important;
  overflow-y: auto !important;
  -webkit-overflow-scrolling: touch !important;
}

/* ✅ NEW: Smart content padding - adjust when keyboard is visible */
:root:has(input:focus-visible, textarea:focus-visible, [contenteditable]:focus-visible) .ios-pwa-content {
  padding-bottom: 120px !important; /* Remove safe area when keyboard is visible */
}

/* Safe Area Utilities */
@layer utilities {
  .pt-safe {
    padding-top: env(safe-area-inset-top);
  }
  
  .pb-safe {
    padding-bottom: env(safe-area-inset-bottom);
  }
  
  .pl-safe {
    padding-left: env(safe-area-inset-left);
  }
  
  .pr-safe {
    padding-right: env(safe-area-inset-right);
  }
  
  .pt-header-safe {
    padding-top: calc(env(safe-area-inset-top) + 4rem);
  }
  
  .pb-input-safe {
    padding-bottom: calc(env(safe-area-inset-bottom) + 5rem);
  }
  
  .header-full-width {
    padding-left: max(1rem, env(safe-area-inset-left));
    padding-right: max(1rem, env(safe-area-inset-right));
  }

  /* ✅ FALLBACK: Simple iOS PWA utilities (backup) */
  .ios-fixed-header {
    position: fixed !important;
    top: env(safe-area-inset-top) !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 50 !important;
  }

  .ios-fixed-footer {
    position: fixed !important;
    bottom: env(safe-area-inset-bottom) !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 50 !important;
  }

  /* ✅ NEW: Dynamic viewport height utilities */
  .h-dvh {
    height: 100dvh;
  }
  
  .min-h-dvh {
    min-height: 100dvh;
  }
  
  .max-h-dvh {
    max-height: 100dvh;
  }
}

/* ✅ CRITICAL: Older iOS support (iOS 11.0 - 11.2) */
@supports (padding-top: constant(safe-area-inset-top)) {
  html {
    --safe-area-inset-top: constant(safe-area-inset-top);
    --safe-area-inset-bottom: constant(safe-area-inset-bottom);
    --safe-area-inset-left: constant(safe-area-inset-left);
    --safe-area-inset-right: constant(safe-area-inset-right);
    min-height: calc(100% + var(--safe-area-inset-top));
  }
  
  .ios-pwa-fixed-header {
    padding-top: constant(safe-area-inset-top) !important;
    padding-left: constant(safe-area-inset-left) !important;
    padding-right: constant(safe-area-inset-right) !important;
  }
  
  .ios-pwa-fixed-footer {
    padding-left: constant(safe-area-inset-left) !important;
    padding-right: constant(safe-area-inset-right) !important;
  }
  
  :root:not(:has(input:focus-visible, textarea:focus-visible, [contenteditable]:focus-visible)) .ios-pwa-fixed-footer {
    padding-bottom: constant(safe-area-inset-bottom) !important;
  }
  
  .ios-pwa-content {
    padding-top: calc(80px + constant(safe-area-inset-top)) !important;
    padding-bottom: calc(120px + constant(safe-area-inset-bottom)) !important;
    padding-left: constant(safe-area-inset-left) !important;
    padding-right: constant(safe-area-inset-right) !important;
  }
  
  :root:has(input:focus-visible, textarea:focus-visible, [contenteditable]:focus-visible) .ios-pwa-content {
    padding-bottom: 120px !important;
  }
}

/* ✅ NEW: Fallback for browsers without :has() support */
@supports not (selector(:has(*))) {
  .ios-pwa-fixed-footer {
    padding-bottom: env(safe-area-inset-bottom) !important;
  }
  
  @supports (padding-top: constant(safe-area-inset-top)) {
    .ios-pwa-fixed-footer {
      padding-bottom: constant(safe-area-inset-bottom) !important;
    }
  }
}

/* Loading Animations */
@keyframes typing-bounce {
  0%, 60%, 100% { transform: translateY(0); }
  30% { transform: translateY(-8px); }
}

@keyframes audio-wave {
  0%, 100% { height: 8px; }
  50% { height: 24px; }
}

@keyframes mic-pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.15);
    opacity: 0.8;
  }
}

@keyframes glow-pulse {
  0%, 100% { box-shadow: 0 0 0 0 rgba(163, 255, 60, 0.4); }
  50% { box-shadow: 0 0 0 8px rgba(163, 255, 60, 0.1); }
}

/* Custom Components */
@layer components {
  .btn-primary {
    @apply bg-primary text-black font-semibold py-3 px-6 rounded-2xl shadow-lg transition-all duration-300 hover:bg-primary-dark hover:shadow-xl active:scale-95;
  }

  .btn-secondary {
    @apply bg-charcoal/80 backdrop-blur-sm text-white font-medium py-3 px-6 rounded-2xl border border-white/10 transition-all duration-300 hover:bg-charcoal-light hover:border-primary/30;
  }

  .card {
    @apply bg-charcoal/60 backdrop-blur-md rounded-2xl border border-white/10 shadow-lg;
  }

  .input-field {
    @apply bg-charcoal/80 backdrop-blur-sm rounded-2xl px-4 py-3 text-white w-full border border-white/10 focus:outline-none focus:border-primary/50 focus:ring-2 focus:ring-primary/20 transition-all duration-300;
  }

  .chat-bubble-user {
    @apply bg-primary text-black rounded-2xl rounded-br-md px-4 py-3 max-w-xs ml-auto shadow-lg;
    max-width: calc(100% - 120px); /* Leave space for floating XP counter */
  }

  .chat-bubble-assistant {
    @apply bg-charcoal text-white rounded-2xl rounded-bl-md px-4 py-3 max-w-xs shadow-lg;
    max-width: calc(100% - 120px); /* Leave space for floating XP counter */
  }
}

/* Prevent overscroll bounce */
.no-scroll {
  position: fixed;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.chat-container {
  height: calc(100dvh - env(safe-area-inset-top) - env(safe-area-inset-bottom));
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: none;
}

/* Mobile-first PWA optimizations */
.safe-area-top {
  padding-top: max(12px, env(safe-area-inset-top));
}

.safe-area-bottom {
  padding-bottom: max(12px, env(safe-area-inset-bottom));
}

/* Touch-friendly interactions */
@media (hover: none) and (pointer: coarse) {
  button:hover {
    transform: none;
  }
  
  button:active {
    transform: scale(0.95);
    transition: transform 0.1s ease;
  }
}

/* Prevent zoom on input focus (iOS) */
input, textarea, select {
  font-size: 16px;
}

/* Smooth scrolling for chat */
.chat-scroll {
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
  overscroll-behavior: none;
}

.chat-scroll::-webkit-scrollbar {
  display: none;
}

/* Prevent text selection on touch devices */
.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
}

/* Floating XP Counter positioning */
.floating-xp-counter {
  position: fixed;
  bottom: calc(env(safe-area-inset-bottom) + 140px); /* Above footer + input */
  right: 1rem;
  z-index: 70; /* Above footer and input */
}

/* Achievement notifications positioning */
.achievement-notifications {
  position: fixed;
  right: 1rem;
  z-index: 9998; /* Above everything except camera (9999) */
  top: calc(env(safe-area-inset-top) + 80px); /* Safe area + header height */
}